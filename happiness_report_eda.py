# -*- coding: utf-8 -*-
"""project2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V5O0Srrm7nhjgx2Yueig1igrlp8I09c0

#  <center>Analysis of World Happiness Report 2017</center>
# <center>Factors That Keep Citizens Happy</center>

The World Happiness Report is an annual

## Chapter 1: Reading the Dataset
"""

import numpy as np
import pandas as pd
import matplotlib as plt
import seaborn as sns

with open("2017.csv") as report:
    report_df = pd.read_csv(report)
with open("country_profile_variables.csv") as country:
  country_df = pd.read_csv(country)

report_df

country_df

"""As we can see, some numeric values are written as ..., we need to remove those rows.

## Chapter 2: Data Cleaning and Preparation

### Happiness Report
"""

print("The dataset has {} rows and {} columns".format(report_df.shape[0], report_df.shape[1]))

report_df.columns

report_df.columns = report_df.columns.str.replace(".","")

report_df.info()

"""As we can see, there are no null values in any of the columns"""

report_df.describe()

"""What arw whisker high and whisker low?

This data seems perfect and no need for any cleaning
Describe how the values ar ecalculated though

### Country Variables
"""

print("This dataset has {} rows and {} columns".format(country_df.shape[0], country_df.shape[1]))

country_df.columns

"""Since we'll merge the dataframes later, so the country column names should be identical"""

country_df.rename(columns={"country":"Country"},inplace=True)

country_df.info()

"""We're interested only on a few columns. LErs select them"""

country_df.columns

sel_cols = ['Country', 'Region', 'Surface area (km2)',
            'Population in thousands (2017)', 'Population density (per km2, 2017)',
       'Sex ratio (m per 100 f, 2017)',
       'GDP: Gross domestic product (million current US$)',
      'Unemployment (% of labour force)',
       'Labour force participation (female/male pop. %)',
      'Food production index (2004-2006=100)',
        'International trade: Balance (million US$)',
       'Balance of payments, current account (million US$)',
       'Population growth rate (average annual %)',
       'Urban population (% of total population)',
       'Fertility rate, total (live births per woman)',
       'Life expectancy at birth (females/males, years)',
       'Population age distribution (0-14 / 60+ years, %)',
       'Infant mortality rate (per 1000 live births',
       'Health: Total expenditure (% of GDP)',
       'Health: Physicians (per 1000 pop.)',
       'Education: Government expenditure (% of GDP)',
       'Seats held by women in national parliaments %',
       'Mobile-cellular subscriptions (per 100 inhabitants)',
       'Pop. using improved drinking water (urban/rural, %)',
       'Pop. using improved sanitation facilities (urban/rural, %)']

con_df = country_df[sel_cols]
con_df

with pd.option_context('display.max_rows', None, 'display.max_columns', None):  # more options can be specified also
    print(con_df)

"""As we can see, l lot of columns have too may bad values. Bad values means those like -99, ... , ~ and null. first we'll convert all of them to null, chrck which columns have more than 20 percent, we'll frop those columns and then we'll drop thr bad rows from the remianing columns

But first lets split the male female coluns
"""

